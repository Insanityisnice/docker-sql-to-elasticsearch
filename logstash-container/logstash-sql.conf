input {
  jdbc {
    jdbc_driver_library => "/opt/sqljdbc_6.0/enu/jre8/sqljdbc42.jar"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    jdbc_connection_string => "jdbc:sqlserver://${SQLSERVER_NAME};user=sa;password=Turk3yT1m3;"
    jdbc_user => "sa"
    jdbc_password => "Turk3yT1m3"
    # https://www.elastic.co/guide/en/logstash/current/plugins-inputs-jdbc.html#_scheduling
    # schedule once a minute ever minute
    schedule => "* * * * *"
    statement => "select EmployeeID, LastName, FirstName, type='employee' from [Northwind].[dbo].[Employees]"
  }

  jdbc {
    jdbc_driver_library => "/opt/sqljdbc_6.0/enu/jre8/sqljdbc42.jar"
    jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
    jdbc_connection_string => "jdbc:sqlserver://${SQLSERVER_NAME};user=sa;password=Turk3yT1m3;"
    jdbc_user => "sa"
    jdbc_password => "Turk3yT1m3"
    schedule => "* * * * *"
    statement => "select OrderID, EmployeeID, CustomerID, type='order' from [Northwind].[dbo].[Orders]"
  }
}

filter {
}

output {
    # if [type] == "person" {
    #     elasticsearch {
    #         hosts => ["{{ .Env.ELASTICSEARCH_TCP_ADDR }}"]
    #         index => "person"
    #     } 
    # } else if [type] == "case" {
    #     elasticsearch {
    #         hosts => ["{{ .Env.ELASTICSEARCH_TCP_ADDR }}"]
    #         index => "case"
    #     } 
    # }

    if [type] == "employee" {
        stdout { codec => json_lines }
    } else if [type] == "order" {
        stdout { codec => json_lines }
    }
}